@page "/PriorityCodes/Edit"
@page "/PriorityCodes/Edit/{priority}"
@using MdcLog.Application;
@using MdcLog.Domain;
@using MdcLog.Domain.Entities;
@using MdcLog.Application.Priorties.Models;
@using MdcLog.Application.Priorties;
@inject DialogService dialogService


<RadzenCard>
    <RadzenTemplateForm TItem="EditPriorityCodeVM" Data="@entity" Submit="@OnSubmit" InvalidSubmit="@OnInvalidSubmit">
        <div class="row" style="margin-bottom: 48px">
            <div class="col-md-12">
                <Radzen.Blazor.RadzenFieldset Text="Priority Code" Style="border:outset">
                    <div class="row">
                        <div class="col-md-6 align-items-center d-flex">
                            <RadzenLabel Text="PRIORITY" />
                        </div>
                        <div class="col-md-12">
                            <RadzenNumeric style="width: 100%;" Name="PriorityCode" @bind-Value="entity.Priority" />
                            <RadzenRequiredValidator Component="PriorityCode" Text="Priority Code is required" Popup="@true" Style="position:sticky" />
                            <RadzenLengthValidator Component="PriorityCode" Max="1" Text="Priority Code cannot be more than 1 character" Popup="@true" Style="position: sticky" />
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="col-md-6 align-items-center d-flex">
                            <RadzenLabel Text="DESCR" />
                        </div>
                        <div class="col-md-12">
                            <RadzenTextBox style="width: 100%;" Name="Descr" @bind-Value="entity.Descr" />
                            <RadzenRequiredValidator Component="Descr" Text="Description is required" Popup="@true" Style="position:sticky" />
                            <RadzenLengthValidator Component="Descr" Max="50" Text="Description cannot be more than 50 character" Popup="@true" Style="position: sticky" />
                        </div>
                    </div>
                    <br />
                </Radzen.Blazor.RadzenFieldset>
            </div>
        </div>
        <RadzenButton ButtonType="ButtonType.Submit" Text="Update Priority Code"></RadzenButton>
        <RadzenButton Text="Cancel" Click="() => OnClose.InvokeAsync(false)" ButtonStyle="ButtonStyle.Secondary" Style="margin-bottom: 10px; width: 150px" />
    </RadzenTemplateForm>
</RadzenCard>


@code {
    [Inject] private PriorityCodeService service { get; set; }
    [Inject] NotificationService notificationService { get; set; }
    [Inject] NavigationManager navigationManager { get; set; }


    private EditPriorityCodeVM entity { get; set; }
    [Parameter] public EventCallback<bool> OnClose { get; set; }
    [Parameter] public int priority { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        entity = service.FindPriorityCode(priority);

    }

    protected void OnSubmit()
    {
        entity = service.EditPriorityCode(entity);

        notificationService.Notify(NotificationSeverity.Success, "Priority Code " + entity.Priority + " Editd Successfully.");
        //navigationManager.NavigateTo("/PriorityCodesList");

        OnClose.InvokeAsync(true);
    }

    protected void OnInvalidSubmit()
    {
        notificationService.Notify(NotificationSeverity.Warning, "Please fix issues.");
    }

    async Task ShowNotification(NotificationMessage message)
    {
        notificationService.Notify(message);


        await InvokeAsync(() => { StateHasChanged(); });
    }
}
